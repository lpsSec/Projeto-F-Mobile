{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\lucas\\\\Documents\\\\Programacao\\\\React-Native\\\\Project-E-MyBook\\\\src\\\\pages\\\\Read.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { WebView } from 'react-native-webview';\nimport Back from \"../assets/back.svg\";\nimport MyBook from \"../assets/Logo.svg\";\n\nvar wait = function wait(timeout) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, timeout);\n  });\n};\n\nexport default function Read() {\n  var navigation = useNavigation();\n  var route = useRoute();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      refreshing = _useState2[0],\n      setRefreshing = _useState2[1];\n\n  var onRefresh = React.useCallback(function () {\n    setRefreshing(true);\n    wait(2000).then(function () {\n      return setRefreshing(false);\n    });\n  }, []);\n\n  var _useState3 = useState({\n    BOOK_PATH: route.params.BOOK_PATH\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      bookInfo = _useState4[0],\n      setBookInfo = _useState4[1];\n\n  useEffect(function () {\n    onRefresh();\n  }, []);\n  return React.createElement(View, {\n    style: styles.background,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.toBack,\n    onPress: function onPress() {\n      navigation.navigate('Profile');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, React.createElement(Back, {\n    width: \"36\",\n    height: \"36\",\n    style: styles.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  })), React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"MyBook\"), React.createElement(MyBook, {\n    width: \"36\",\n    height: \"36\",\n    style: styles.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  })), refreshing && React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"#000000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), React.createElement(WebView, {\n    source: {\n      uri: bookInfo.BOOK_PATH\n    },\n    style: styles.webView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#FFFFFF'\n  },\n  header: {\n    height: 130,\n    width: 415,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    marginBottom: 10,\n    paddingTop: 60,\n    backgroundColor: '#17F1A1'\n  },\n  toBack: {\n    width: 36,\n    height: 36\n  },\n  title: {\n    fontSize: 24,\n    color: '#000',\n    fontWeight: 'bold'\n  },\n  icon: {\n    width: 36,\n    height: 36\n  },\n  webView: {\n    width: 400\n  }\n});","map":{"version":3,"sources":["C:/Users/lucas/Documents/Programacao/React-Native/Project-E-MyBook/src/pages/Read.js"],"names":["React","useState","useEffect","useNavigation","useRoute","WebView","Back","MyBook","wait","timeout","Promise","resolve","setTimeout","Read","navigation","route","refreshing","setRefreshing","onRefresh","useCallback","then","BOOK_PATH","params","bookInfo","setBookInfo","styles","background","header","toBack","navigate","icon","title","uri","webView","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","height","width","flexDirection","marginBottom","paddingTop","fontSize","color","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, TouchableOpacity, ActivityIndicator, StyleSheet } from 'react-native';\r\nimport { useNavigation, useRoute } from '@react-navigation/native';\r\nimport { WebView } from 'react-native-webview';\r\nimport Back from '../assets/back.svg';\r\nimport MyBook from '../assets/Logo.svg';\r\n\r\nconst wait = (timeout) => {\r\n    return new Promise(resolve => setTimeout(resolve, timeout));\r\n}\r\n\r\nexport default function Read() {\r\n    const navigation = useNavigation();\r\n    const route = useRoute();\r\n\r\n    const [refreshing, setRefreshing] = useState(false);\r\n\r\n    const onRefresh = React.useCallback(() => {\r\n        setRefreshing(true);\r\n        wait(2000).then(() => setRefreshing(false));\r\n    }, []);\r\n\r\n    const [bookInfo, setBookInfo] = useState({\r\n        BOOK_PATH: route.params.BOOK_PATH\r\n    });\r\n\r\n    useEffect(() => {\r\n        onRefresh();\r\n    }, []);\r\n    return (\r\n        <View style={styles.background}>\r\n            <View style={styles.header}>\r\n                <TouchableOpacity style={styles.toBack} onPress={()=>{ navigation.navigate('Profile') }}>\r\n                    <Back width=\"36\" height=\"36\" style={styles.icon}/>\r\n                </TouchableOpacity>\r\n                <Text style={styles.title}>MyBook</Text>\r\n                <MyBook width=\"36\" height=\"36\" style={styles.icon}/>\r\n            </View>\r\n            {refreshing && \r\n                <ActivityIndicator size=\"large\" color=\"#000000\"/>\r\n            }\r\n            <WebView source={{ uri: bookInfo.BOOK_PATH }} style={styles.webView}/>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    background: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: '#FFFFFF'\r\n    },\r\n    header: {\r\n        height: 130,\r\n        width: 415,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-around',\r\n        marginBottom: 10,\r\n        paddingTop: 60,\r\n        backgroundColor: '#17F1A1'\r\n    },\r\n    toBack: {\r\n        width: 36,\r\n        height: 36\r\n    },\r\n    title: {\r\n        fontSize: 24,\r\n        color: '#000',\r\n        fontWeight: 'bold'\r\n    },\r\n    icon: {\r\n        width: 36,\r\n        height: 36,\r\n    },\r\n    webView: {\r\n        width: 400\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}