{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\lucas\\\\Documents\\\\Programacao\\\\React-Native\\\\Project-E-MyBook\\\\src\\\\components\\\\PasswordModal.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Api from \"../Api\";\nimport ExpandIcon from \"../assets/expand.svg\";\nimport Lock from \"../assets/lock.svg\";\n\nvar wait = function wait(timeout) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, timeout);\n  });\n};\n\nexport default (function (_ref) {\n  var show = _ref.show,\n      setShow = _ref.setShow,\n      value = _ref.value;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      passwordField = _useState2[0],\n      setPasswordField = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      passwordField2 = _useState4[0],\n      setPasswordField2 = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      message = _useState6[0],\n      setMessage = _useState6[1];\n\n  var _useState7 = useState('none'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      messageEmpty = _useState8[0],\n      setMessageEmpty = _useState8[1];\n\n  var _useState9 = useState('none'),\n      _useState10 = _slicedToArray(_useState9, 2),\n      messageEmpty2 = _useState10[0],\n      setMessageEmpty2 = _useState10[1];\n\n  var _useState11 = useState('none'),\n      _useState12 = _slicedToArray(_useState11, 2),\n      messageEmpty3 = _useState12[0],\n      setMessageEmpty3 = _useState12[1];\n\n  var AlterPassword = function AlterPassword() {\n    var json;\n    return _regeneratorRuntime.async(function AlterPassword$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(passwordField != passwordField2)) {\n              _context.next = 5;\n              break;\n            }\n\n            setMessageEmpty('flex');\n            wait(3000).then(function () {\n              setMessageEmpty('none');\n            });\n            _context.next = 14;\n            break;\n\n          case 5:\n            if (!(passwordField.length < 6 || passwordField.length > 10)) {\n              _context.next = 10;\n              break;\n            }\n\n            setMessageEmpty2('flex');\n            wait(3000).then(function () {\n              setMessageEmpty2('none');\n            });\n            _context.next = 14;\n            break;\n\n          case 10:\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(Api.alterPassword(value, passwordField));\n\n          case 12:\n            json = _context.sent;\n            if (!json.error) setShow(false);else {\n              setMessage(json.mensagem);\n              setMessageEmpty3('flex');\n              wait(3000).then(function () {\n                setMessageEmpty3('none');\n              });\n            }\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Modal, {\n    transparent: true,\n    visible: show,\n    animationType: \"slide\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.background,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.modalBody,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      width: 40,\n      height: 40\n    },\n    onPress: function onPress() {\n      setShow(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, React.createElement(ExpandIcon, {\n    width: \"40\",\n    height: \"40\",\n    fill: \"#000000\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    style: styles.passwordArea,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.inputArea,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, React.createElement(Lock, {\n    width: \"24\",\n    height: \"24\",\n    fill: \"#000000\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Digite sua nova senha\",\n    placeholderTextColor: \"#000000\",\n    value: passwordField,\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(t) {\n      return setPasswordField(t);\n    },\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  })), React.createElement(View, {\n    style: styles.inputArea,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }, React.createElement(Lock, {\n    width: \"24\",\n    height: \"24\",\n    fill: \"#000000\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 29\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Digite novamente sua senha\",\n    placeholderTextColor: \"#000000\",\n    value: passwordField2,\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(t) {\n      return setPasswordField2(t);\n    },\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  }))), React.createElement(View, {\n    style: styles.messageArea,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      display: messageEmpty,\n      color: '#FF0000',\n      fontSize: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, \"As senhas s\\xE3o diferentes! Tente novamente\"), React.createElement(Text, {\n    style: {\n      display: messageEmpty2,\n      color: '#FF0000',\n      fontSize: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, \"A senha deve ter entre 6 e 10 caracteres!\"), React.createElement(Text, {\n    style: {\n      display: messageEmpty3,\n      color: '#FF0000',\n      fontSize: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, message)), React.createElement(View, {\n    style: styles.confirmArea,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.passwordButton,\n    onPress: AlterPassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.textPassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, \"Confirmar\"))))));\n});\nvar styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'flex-end'\n  },\n  modalBody: {\n    backgroundColor: '#FFFFFF',\n    minHeight: 350,\n    borderTopRightRadius: 30,\n    borderTopLeftRadius: 30,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  passwordArea: {\n    width: 350,\n    height: 150,\n    alignItems: 'center',\n    justifyContent: 'space-around'\n  },\n  inputArea: {\n    width: 350,\n    height: 50,\n    backgroundColor: '#F5F5F5',\n    flexDirection: 'row',\n    borderRadius: 10,\n    paddingLeft: 15,\n    alignItems: 'center',\n    borderWidth: 2,\n    borderColor: '#000000'\n  },\n  input: {\n    flex: 1,\n    fontSize: 16,\n    color: '#000000',\n    marginLeft: 5\n  },\n  messageArea: {\n    width: 350,\n    height: 20,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  confirmArea: {\n    width: 350,\n    height: 100,\n    marginBottom: 10,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  passwordButton: {\n    width: 300,\n    height: 50,\n    backgroundColor: '#17F1A1',\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  textPassword: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    color: '#000000'\n  }\n});","map":{"version":3,"sources":["C:/Users/lucas/Documents/Programacao/React-Native/Project-E-MyBook/src/components/PasswordModal.js"],"names":["React","useState","Api","ExpandIcon","Lock","wait","timeout","Promise","resolve","setTimeout","show","setShow","value","passwordField","setPasswordField","passwordField2","setPasswordField2","message","setMessage","messageEmpty","setMessageEmpty","messageEmpty2","setMessageEmpty2","messageEmpty3","setMessageEmpty3","AlterPassword","then","length","alterPassword","json","error","mensagem","styles","background","modalBody","width","height","passwordArea","inputArea","input","t","messageArea","display","color","fontSize","confirmArea","passwordButton","textPassword","StyleSheet","create","flex","backgroundColor","justifyContent","minHeight","borderTopRightRadius","borderTopLeftRadius","alignItems","flexDirection","borderRadius","paddingLeft","borderWidth","borderColor","marginLeft","marginBottom","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Modal, TouchableOpacity, View, TextInput, Text, StyleSheet } from 'react-native';\r\nimport Api from '../Api';\r\nimport ExpandIcon from '../assets/expand.svg';\r\nimport Lock from '../assets/lock.svg';\r\n\r\nconst wait = (timeout) => {\r\n    return new Promise(resolve => setTimeout(resolve, timeout));\r\n}\r\n\r\nexport default ({show, setShow, value})  =>  {\r\n    const [passwordField, setPasswordField] = useState('');\r\n    const [passwordField2, setPasswordField2] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [messageEmpty, setMessageEmpty] = useState('none');\r\n    const [messageEmpty2, setMessageEmpty2] = useState('none');\r\n    const [messageEmpty3, setMessageEmpty3] = useState('none');\r\n\r\n    const AlterPassword = async () => {\r\n        if(passwordField != passwordField2) {\r\n            setMessageEmpty('flex');\r\n            wait(3000).then(() => { setMessageEmpty('none') });\r\n        } else if (passwordField.length < 6 || passwordField.length > 10) {\r\n            setMessageEmpty2('flex');\r\n            wait(3000).then(() => { setMessageEmpty2('none') });\r\n        } else {\r\n            let json = await Api.alterPassword(value, passwordField);\r\n            if(!json.error)\r\n                setShow(false);\r\n            else {\r\n                setMessage(json.mensagem);\r\n                setMessageEmpty3('flex');\r\n                wait(3000).then(() => { setMessageEmpty3('none') });\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            transparent={true}\r\n            visible={show}\r\n            animationType=\"slide\"\r\n        >\r\n            <View style={styles.background}>\r\n                <View style={styles.modalBody}>\r\n                    <TouchableOpacity style={{width: 40, height: 40}} onPress={()=>{ setShow(false) }}>\r\n                        <ExpandIcon width=\"40\" height=\"40\" fill=\"#000000\"/>\r\n                    </TouchableOpacity>\r\n                    <View style={styles.passwordArea}>\r\n                        <View style={styles.inputArea}>\r\n                            <Lock width=\"24\" height=\"24\" fill=\"#000000\" />\r\n                            <TextInput\r\n                                style={styles.input} \r\n                                placeholder=\"Digite sua nova senha\"\r\n                                placeholderTextColor=\"#000000\"\r\n                                value={passwordField}\r\n                                autoCapitalize='none'\r\n                                onChangeText={t=>setPasswordField(t)}\r\n                                secureTextEntry={true}\r\n                            />\r\n                        </View>\r\n                        <View style={styles.inputArea}>\r\n                            <Lock width=\"24\" height=\"24\" fill=\"#000000\" />\r\n                            <TextInput\r\n                                style={styles.input} \r\n                                placeholder=\"Digite novamente sua senha\"\r\n                                placeholderTextColor=\"#000000\"\r\n                                value={passwordField2}\r\n                                autoCapitalize='none'\r\n                                onChangeText={t=>setPasswordField2(t)}\r\n                                secureTextEntry={true}\r\n                            />\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.messageArea}>\r\n                        <Text style={{ display: messageEmpty, color: '#FF0000', fontSize: 15 }}>\r\n                            As senhas são diferentes! Tente novamente\r\n                        </Text>\r\n                        <Text style={{ display: messageEmpty2, color: '#FF0000', fontSize: 15 }}>\r\n                            A senha deve ter entre 6 e 10 caracteres!\r\n                        </Text>\r\n                        <Text style={{ display: messageEmpty3, color: '#FF0000', fontSize: 15 }}>\r\n                            {message}\r\n                        </Text>\r\n                    </View>\r\n                    <View style={styles.confirmArea}>\r\n                        <TouchableOpacity style={styles.passwordButton} onPress={AlterPassword}>\r\n                            <Text style={styles.textPassword}>Confirmar</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        </Modal>\r\n    )\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    background: {\r\n        flex: 1,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n        justifyContent: 'flex-end'\r\n    },\r\n    modalBody: {\r\n        backgroundColor: '#FFFFFF',\r\n        minHeight: 350,\r\n        borderTopRightRadius: 30,\r\n        borderTopLeftRadius: 30,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    passwordArea: {\r\n        width: 350,\r\n        height: 150,\r\n        alignItems: 'center',\r\n        justifyContent: 'space-around'\r\n    },\r\n    inputArea: {\r\n        width: 350,\r\n        height: 50,\r\n        backgroundColor: '#F5F5F5',\r\n        flexDirection: 'row',\r\n        borderRadius: 10,\r\n        paddingLeft: 15,\r\n        alignItems: 'center',\r\n        borderWidth: 2,\r\n        borderColor: '#000000'\r\n    },\r\n    input: {\r\n        flex: 1,\r\n        fontSize: 16,\r\n        color: '#000000',\r\n        marginLeft: 5\r\n    },\r\n    messageArea: {\r\n        width: 350,\r\n        height: 20,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    confirmArea: {\r\n        width: 350,\r\n        height: 100,\r\n        marginBottom: 10,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    passwordButton: {\r\n        width: 300,\r\n        height: 50,\r\n        backgroundColor: '#17F1A1',\r\n        borderRadius: 10,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    textPassword: {\r\n        fontSize: 22,\r\n        fontWeight: 'bold',\r\n        color: '#000000'\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}