{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar BASE_API = 'https://project-e-api.herokuapp.com';\nexport default {\n  checkToken: function checkToken(token, user) {\n    var req, json;\n    return _regeneratorRuntime.async(function checkToken$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(BASE_API + \"/auth/refresh\", {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                \"Authorization\": 'Baerer ' + token\n              },\n              body: JSON.stringify({\n                token: token,\n                user: user\n              })\n            }));\n\n          case 2:\n            req = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(req.json());\n\n          case 5:\n            json = _context.sent;\n            return _context.abrupt(\"return\", json);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  signIn: function signIn(USR_LOGINNAME, USR_PASSWORD) {\n    var req, json;\n    return _regeneratorRuntime.async(function signIn$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(fetch(BASE_API + \"/auth/login\", {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                USR_LOGINNAME: USR_LOGINNAME,\n                USR_PASSWORD: USR_PASSWORD\n              })\n            }));\n\n          case 2:\n            req = _context2.sent;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(req.json());\n\n          case 5:\n            json = _context2.sent;\n            return _context2.abrupt(\"return\", json);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  signUp: function signUp(USR_NAME, USR_DATEBIRTHDAY, USR_PHONENUMBER, USRDOC_CPFNUMBER, USR_LOGINNAME, USR_PASSWORD, USR_PHOTO) {\n    var req, json;\n    return _regeneratorRuntime.async(function signUp$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(fetch(BASE_API + \"/auth/register\", {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                USR_NAME: USR_NAME,\n                USR_DATEBIRTHDAY: USR_DATEBIRTHDAY,\n                USR_PHONENUMBER: USR_PHONENUMBER,\n                USRDOC_CPFNUMBER: USRDOC_CPFNUMBER,\n                USR_LOGINNAME: USR_LOGINNAME,\n                USR_PASSWORD: USR_PASSWORD,\n                USR_PHOTO: USR_PHOTO\n              })\n            }));\n\n          case 2:\n            req = _context3.sent;\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(req.json());\n\n          case 5:\n            json = _context3.sent;\n            return _context3.abrupt(\"return\", json);\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  signOut: function signOut() {\n    var token, req, json;\n    return _regeneratorRuntime.async(function signOut$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n          case 2:\n            token = _context4.sent;\n            _context4.next = 5;\n            return _regeneratorRuntime.awrap(fetch(BASE_API + \"/auth/logout\", {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                \"Authorization\": 'Baerer ' + token\n              },\n              body: JSON.stringify({\n                token: token\n              })\n            }));\n\n          case 5:\n            req = _context4.sent;\n            _context4.next = 8;\n            return _regeneratorRuntime.awrap(req.json());\n\n          case 8:\n            json = _context4.sent;\n            return _context4.abrupt(\"return\", json);\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getBooks: function getBooks() {\n    var user, token, req, json;\n    return _regeneratorRuntime.async(function getBooks$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 2:\n            user = _context5.sent;\n            _context5.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n          case 5:\n            token = _context5.sent;\n            _context5.next = 8;\n            return _regeneratorRuntime.awrap(fetch(BASE_API + \"/book/\" + user, {\n              headers: {\n                \"Authorization\": 'Baerer ' + token\n              }\n            }));\n\n          case 8:\n            req = _context5.sent;\n            _context5.next = 11;\n            return _regeneratorRuntime.awrap(req.json());\n\n          case 11:\n            json = _context5.sent;\n            return _context5.abrupt(\"return\", json);\n\n          case 13:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getBookByGen: function getBookByGen(GEN_NOME) {\n    var token, user, req, json;\n    return _regeneratorRuntime.async(function getBookByGen$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n          case 2:\n            token = _context6.sent;\n            _context6.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 5:\n            user = _context6.sent;\n            _context6.next = 8;\n            return _regeneratorRuntime.awrap(fetch(BASE_API + \"/book/byGen\", {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                \"Authorization\": 'Baerer ' + token\n              },\n              body: JSON.stringify({\n                user: user,\n                GEN_NOME: GEN_NOME\n              })\n            }));\n\n          case 8:\n            req = _context6.sent;\n            _context6.next = 11;\n            return _regeneratorRuntime.awrap(req.json());\n\n          case 11:\n            json = _context6.sent;\n            return _context6.abrupt(\"return\", json);\n\n          case 13:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getBookByName: function getBookByName(BOOK_NAME, GEN_NOME) {\n    var token, req, json;\n    return _regeneratorRuntime.async(function getBookByName$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n          case 2:\n            token = _context7.sent;\n            _context7.next = 5;\n            return _regeneratorRuntime.awrap(fetch(BASE_API + \"/book/byName\", {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                \"Authorization\": 'Baerer ' + token\n              },\n              body: JSON.stringify({\n                BOOK_NAME: BOOK_NAME,\n                GEN_NOME: GEN_NOME\n              })\n            }));\n\n          case 5:\n            req = _context7.sent;\n            _context7.next = 8;\n            return _regeneratorRuntime.awrap(req.json());\n\n          case 8:\n            json = _context7.sent;\n            return _context7.abrupt(\"return\", json);\n\n          case 10:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getUserId: function getUserId() {\n    var user, token, req, json;\n    return _regeneratorRuntime.async(function getUserId$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 2:\n            user = _context8.sent;\n            _context8.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n          case 5:\n            token = _context8.sent;\n            _context8.next = 8;\n            return _regeneratorRuntime.awrap(fetch(BASE_API + \"/user/\" + user, {\n              headers: {\n                \"Authorization\": 'Baerer ' + token\n              }\n            }));\n\n          case 8:\n            req = _context8.sent;\n            _context8.next = 11;\n            return _regeneratorRuntime.awrap(req.json());\n\n          case 11:\n            json = _context8.sent;\n            return _context8.abrupt(\"return\", json);\n\n          case 13:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  locateBook: function locateBook(BOOK_ID, LOC_DATE_RETIRADA) {\n    var token, user, req, json;\n    return _regeneratorRuntime.async(function locateBook$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n          case 2:\n            token = _context9.sent;\n            _context9.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 5:\n            user = _context9.sent;\n            _context9.next = 8;\n            return _regeneratorRuntime.awrap(fetch(BASE_API + \"/user\", {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                \"Authorization\": 'Baerer ' + token\n              },\n              body: JSON.stringify({\n                user: user,\n                BOOK_ID: BOOK_ID,\n                LOC_DATE_RETIRADA: LOC_DATE_RETIRADA\n              })\n            }));\n\n          case 8:\n            req = _context9.sent;\n            _context9.next = 11;\n            return _regeneratorRuntime.awrap(req.json());\n\n          case 11:\n            json = _context9.sent;\n            return _context9.abrupt(\"return\", json);\n\n          case 13:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getLocates: function getLocates() {\n    var token, user, req, json;\n    return _regeneratorRuntime.async(function getLocates$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n          case 2:\n            token = _context10.sent;\n            _context10.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 5:\n            user = _context10.sent;\n            _context10.next = 8;\n            return _regeneratorRuntime.awrap(fetch(BASE_API + \"/user/getLocates/\" + user, {\n              headers: {\n                \"Authorization\": 'Baerer ' + token\n              }\n            }));\n\n          case 8:\n            req = _context10.sent;\n            _context10.next = 11;\n            return _regeneratorRuntime.awrap(req.json());\n\n          case 11:\n            json = _context10.sent;\n            return _context10.abrupt(\"return\", json);\n\n          case 13:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  giveBackBook: function giveBackBook(BOOK_ID) {\n    var token, user, req, json;\n    return _regeneratorRuntime.async(function giveBackBook$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n          case 2:\n            token = _context11.sent;\n            _context11.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 5:\n            user = _context11.sent;\n            _context11.next = 8;\n            return _regeneratorRuntime.awrap(fetch(BASE_API + \"/user/giveBack\", {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                \"Authorization\": 'Baerer ' + token\n              },\n              body: JSON.stringify({\n                user: user,\n                BOOK_ID: BOOK_ID\n              })\n            }));\n\n          case 8:\n            req = _context11.sent;\n            _context11.next = 11;\n            return _regeneratorRuntime.awrap(req.json());\n\n          case 11:\n            json = _context11.sent;\n            return _context11.abrupt(\"return\", json);\n\n          case 13:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  verifyFavorite: function verifyFavorite(BOOK_ID) {\n    var token, user, req, json;\n    return _regeneratorRuntime.async(function verifyFavorite$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _context12.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n          case 2:\n            token = _context12.sent;\n            _context12.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 5:\n            user = _context12.sent;\n            _context12.next = 8;\n            return _regeneratorRuntime.awrap(fetch(BASE_API + \"/user/verifyFavorite\", {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                \"Authorization\": 'Baerer ' + token\n              },\n              body: JSON.stringify({\n                user: user,\n                BOOK_ID: BOOK_ID\n              })\n            }));\n\n          case 8:\n            req = _context12.sent;\n            _context12.next = 11;\n            return _regeneratorRuntime.awrap(req.json());\n\n          case 11:\n            json = _context12.sent;\n            return _context12.abrupt(\"return\", json);\n\n          case 13:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  addFavorite: function addFavorite(BOOK_ID) {\n    var token, user, req, json;\n    return _regeneratorRuntime.async(function addFavorite$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _context13.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n          case 2:\n            token = _context13.sent;\n            _context13.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 5:\n            user = _context13.sent;\n            _context13.next = 8;\n            return _regeneratorRuntime.awrap(fetch(BASE_API + \"/user/addFavorite\", {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                \"Authorization\": 'Baerer ' + token\n              },\n              body: JSON.stringify({\n                user: user,\n                BOOK_ID: BOOK_ID\n              })\n            }));\n\n          case 8:\n            req = _context13.sent;\n            _context13.next = 11;\n            return _regeneratorRuntime.awrap(req.json());\n\n          case 11:\n            json = _context13.sent;\n            return _context13.abrupt(\"return\", json);\n\n          case 13:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  removeFavorite: function removeFavorite(BOOK_ID) {\n    var token, user, req, json;\n    return _regeneratorRuntime.async(function removeFavorite$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            _context14.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n          case 2:\n            token = _context14.sent;\n            _context14.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 5:\n            user = _context14.sent;\n            _context14.next = 8;\n            return _regeneratorRuntime.awrap(fetch(BASE_API + \"/user/removeFavorites\", {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                \"Authorization\": 'Baerer ' + token\n              },\n              body: JSON.stringify({\n                user: user,\n                BOOK_ID: BOOK_ID\n              })\n            }));\n\n          case 8:\n            req = _context14.sent;\n            _context14.next = 11;\n            return _regeneratorRuntime.awrap(req.json());\n\n          case 11:\n            json = _context14.sent;\n            return _context14.abrupt(\"return\", json);\n\n          case 13:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getFavorites: function getFavorites() {\n    var token, user, req, json;\n    return _regeneratorRuntime.async(function getFavorites$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            _context15.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n          case 2:\n            token = _context15.sent;\n            _context15.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 5:\n            user = _context15.sent;\n            _context15.next = 8;\n            return _regeneratorRuntime.awrap(fetch(BASE_API + \"/user/getFavorites/\" + user, {\n              headers: {\n                \"Authorization\": 'Baerer ' + token\n              }\n            }));\n\n          case 8:\n            req = _context15.sent;\n            _context15.next = 11;\n            return _regeneratorRuntime.awrap(req.json());\n\n          case 11:\n            json = _context15.sent;\n            return _context15.abrupt(\"return\", json);\n\n          case 13:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  alterPassword: function alterPassword(USR_ID, USR_PASSWORD) {\n    var token, req, json;\n    return _regeneratorRuntime.async(function alterPassword$(_context16) {\n      while (1) {\n        switch (_context16.prev = _context16.next) {\n          case 0:\n            _context16.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n          case 2:\n            token = _context16.sent;\n            _context16.next = 5;\n            return _regeneratorRuntime.awrap(fetch(BASE_API + \"/auth/update/\", {\n              method: 'PATCH',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                \"Authorization\": 'Baerer ' + token\n              },\n              body: JSON.stringify({\n                USR_ID: USR_ID,\n                USR_PASSWORD: USR_PASSWORD\n              })\n            }));\n\n          case 5:\n            req = _context16.sent;\n            _context16.next = 8;\n            return _regeneratorRuntime.awrap(req.json());\n\n          case 8:\n            json = _context16.sent;\n            return _context16.abrupt(\"return\", json);\n\n          case 10:\n          case \"end\":\n            return _context16.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  alterData: function alterData(USR_ID, USR_NAME, USR_LOGINNAME, USR_PHONENUMBER, USR_DATEBIRTHDAY, USRDOC_CPFNUMBER) {\n    var token, req, json;\n    return _regeneratorRuntime.async(function alterData$(_context17) {\n      while (1) {\n        switch (_context17.prev = _context17.next) {\n          case 0:\n            if (USR_NAME == '') USR_NAME = null;\n            if (USR_LOGINNAME == '') USR_LOGINNAME = null;\n            if (USR_PHONENUMBER == '') USR_PHONENUMBER = null;\n            if (USR_DATEBIRTHDAY == '') USR_DATEBIRTHDAY = null;\n            if (USRDOC_CPFNUMBER == '') USRDOC_CPFNUMBER = null;\n            _context17.next = 7;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n          case 7:\n            token = _context17.sent;\n            _context17.next = 10;\n            return _regeneratorRuntime.awrap(fetch(BASE_API + \"/auth/updateData/\", {\n              method: 'PATCH',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                \"Authorization\": 'Baerer ' + token\n              },\n              body: JSON.stringify({\n                USR_ID: USR_ID,\n                USR_NAME: USR_NAME,\n                USR_LOGINNAME: USR_LOGINNAME,\n                USR_PHONENUMBER: USR_PHONENUMBER,\n                USR_DATEBIRTHDAY: USR_DATEBIRTHDAY,\n                USRDOC_CPFNUMBER: USRDOC_CPFNUMBER\n              })\n            }));\n\n          case 10:\n            req = _context17.sent;\n            _context17.next = 13;\n            return _regeneratorRuntime.awrap(req.json());\n\n          case 13:\n            json = _context17.sent;\n            return _context17.abrupt(\"return\", json);\n\n          case 15:\n          case \"end\":\n            return _context17.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  addBook: function addBook(BOOK_NAME, BOOK_DESC, BOOK_GEN, BOOK_AUTHOR, BOOK_PATH) {\n    var token, req, json;\n    return _regeneratorRuntime.async(function addBook$(_context18) {\n      while (1) {\n        switch (_context18.prev = _context18.next) {\n          case 0:\n            _context18.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n          case 2:\n            token = _context18.sent;\n            _context18.next = 5;\n            return _regeneratorRuntime.awrap(fetch(BASE_API + \"/book/\", {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                \"Authorization\": 'Baerer ' + token\n              },\n              body: JSON.stringify({\n                BOOK_NAME: BOOK_NAME,\n                BOOK_DESC: BOOK_DESC,\n                BOOK_GEN: BOOK_GEN,\n                BOOK_AUTHOR: BOOK_AUTHOR,\n                BOOK_PATH: BOOK_PATH\n              })\n            }));\n\n          case 5:\n            req = _context18.sent;\n            _context18.next = 8;\n            return _regeneratorRuntime.awrap(req.json());\n\n          case 8:\n            json = _context18.sent;\n            return _context18.abrupt(\"return\", json);\n\n          case 10:\n          case \"end\":\n            return _context18.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getBookLocates: function getBookLocates() {\n    var token, req, json;\n    return _regeneratorRuntime.async(function getBookLocates$(_context19) {\n      while (1) {\n        switch (_context19.prev = _context19.next) {\n          case 0:\n            _context19.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n          case 2:\n            token = _context19.sent;\n            _context19.next = 5;\n            return _regeneratorRuntime.awrap(fetch(BASE_API + \"/book/locates/\", {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                \"Authorization\": 'Baerer ' + token\n              }\n            }));\n\n          case 5:\n            req = _context19.sent;\n            _context19.next = 8;\n            return _regeneratorRuntime.awrap(req.json());\n\n          case 8:\n            json = _context19.sent;\n            return _context19.abrupt(\"return\", json);\n\n          case 10:\n          case \"end\":\n            return _context19.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getBookLocatesByUserName: function getBookLocatesByUserName(USR_NAME) {\n    var token, req, json;\n    return _regeneratorRuntime.async(function getBookLocatesByUserName$(_context20) {\n      while (1) {\n        switch (_context20.prev = _context20.next) {\n          case 0:\n            _context20.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n          case 2:\n            token = _context20.sent;\n            _context20.next = 5;\n            return _regeneratorRuntime.awrap(fetch(BASE_API + \"/book/locatesByUserName/\", {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                \"Authorization\": 'Baerer ' + token\n              },\n              body: JSON.stringify({\n                USR_NAME: USR_NAME\n              })\n            }));\n\n          case 5:\n            req = _context20.sent;\n            _context20.next = 8;\n            return _regeneratorRuntime.awrap(req.json());\n\n          case 8:\n            json = _context20.sent;\n            return _context20.abrupt(\"return\", json);\n\n          case 10:\n          case \"end\":\n            return _context20.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getBookLocatesByBookName: function getBookLocatesByBookName(BOOK_NAME) {\n    var token, req, json;\n    return _regeneratorRuntime.async(function getBookLocatesByBookName$(_context21) {\n      while (1) {\n        switch (_context21.prev = _context21.next) {\n          case 0:\n            _context21.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n          case 2:\n            token = _context21.sent;\n            _context21.next = 5;\n            return _regeneratorRuntime.awrap(fetch(BASE_API + \"/book/locatesByBookName/\", {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                \"Authorization\": 'Baerer ' + token\n              },\n              body: JSON.stringify({\n                BOOK_NAME: BOOK_NAME\n              })\n            }));\n\n          case 5:\n            req = _context21.sent;\n            _context21.next = 8;\n            return _regeneratorRuntime.awrap(req.json());\n\n          case 8:\n            json = _context21.sent;\n            return _context21.abrupt(\"return\", json);\n\n          case 10:\n          case \"end\":\n            return _context21.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getGenres: function getGenres() {\n    var token, req, json;\n    return _regeneratorRuntime.async(function getGenres$(_context22) {\n      while (1) {\n        switch (_context22.prev = _context22.next) {\n          case 0:\n            _context22.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n          case 2:\n            token = _context22.sent;\n            _context22.next = 5;\n            return _regeneratorRuntime.awrap(fetch(BASE_API + \"/book/getGenre/\", {\n              headers: {\n                \"Authorization\": 'Baerer ' + token\n              }\n            }));\n\n          case 5:\n            req = _context22.sent;\n            _context22.next = 8;\n            return _regeneratorRuntime.awrap(req.json());\n\n          case 8:\n            json = _context22.sent;\n            return _context22.abrupt(\"return\", json);\n\n          case 10:\n          case \"end\":\n            return _context22.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n};","map":{"version":3,"sources":["C:/Users/lucas/Documents/Programacao/React-Native/Project-E-MyBook/src/Api.js"],"names":["AsyncStorage","BASE_API","checkToken","token","user","fetch","method","headers","Accept","body","JSON","stringify","req","json","signIn","USR_LOGINNAME","USR_PASSWORD","signUp","USR_NAME","USR_DATEBIRTHDAY","USR_PHONENUMBER","USRDOC_CPFNUMBER","USR_PHOTO","signOut","getItem","getBooks","getBookByGen","GEN_NOME","getBookByName","BOOK_NAME","getUserId","locateBook","BOOK_ID","LOC_DATE_RETIRADA","getLocates","giveBackBook","verifyFavorite","addFavorite","removeFavorite","getFavorites","alterPassword","USR_ID","alterData","addBook","BOOK_DESC","BOOK_GEN","BOOK_AUTHOR","BOOK_PATH","getBookLocates","getBookLocatesByUserName","getBookLocatesByBookName","getGenres"],"mappings":"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","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\r\nconst BASE_API = 'https://project-e-api.herokuapp.com';\r\n\r\nexport default {\r\n    checkToken: async (token, user) => {\r\n        const req = await fetch(`${BASE_API}/auth/refresh`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": 'Baerer ' + token\r\n            },\r\n            body: JSON.stringify({token, user})\r\n        });\r\n        const json = await req.json();\r\n        return json;\r\n    },\r\n    signIn: async (USR_LOGINNAME, USR_PASSWORD) => {\r\n        const req = await fetch(`${BASE_API}/auth/login`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({USR_LOGINNAME, USR_PASSWORD})\r\n        });\r\n        const json = await req.json();\r\n\r\n        return json;\r\n    },\r\n    signUp: async (USR_NAME, USR_DATEBIRTHDAY, USR_PHONENUMBER, USRDOC_CPFNUMBER, USR_LOGINNAME, USR_PASSWORD, USR_PHOTO) => {\r\n        const req = await fetch(`${BASE_API}/auth/register`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({USR_NAME, USR_DATEBIRTHDAY, USR_PHONENUMBER, USRDOC_CPFNUMBER, USR_LOGINNAME, USR_PASSWORD, USR_PHOTO})\r\n        });\r\n        const json = await req.json();\r\n        return json;\r\n    },\r\n    signOut: async () => {\r\n        const token = await AsyncStorage.getItem('token');\r\n        const req = await fetch(`${BASE_API}/auth/logout`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": 'Baerer ' + token\r\n            },\r\n            body: JSON.stringify({token})\r\n        });\r\n        const json = await req.json();\r\n\r\n        return json;\r\n    },\r\n    getBooks: async () => {\r\n        const user = await AsyncStorage.getItem('user');\r\n        const token = await AsyncStorage.getItem('token');\r\n        const req = await fetch(`${BASE_API}/book/` + user, {\r\n            headers: {\r\n                \"Authorization\": 'Baerer ' + token\r\n            }\r\n        });\r\n        const json = await req.json();\r\n        return json;\r\n    },\r\n    getBookByGen: async (GEN_NOME) => {\r\n        const token = await AsyncStorage.getItem('token');\r\n        const user = await AsyncStorage.getItem('user');\r\n        const req = await fetch(`${BASE_API}/book/byGen`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": 'Baerer ' + token\r\n            },\r\n            body: JSON.stringify({user, GEN_NOME})\r\n        });\r\n        const json = await req.json();\r\n        return json;\r\n    },\r\n    getBookByName: async (BOOK_NAME, GEN_NOME) => {\r\n        const token = await AsyncStorage.getItem('token');\r\n        const req = await fetch(`${BASE_API}/book/byName`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": 'Baerer ' + token\r\n            },\r\n            body: JSON.stringify({BOOK_NAME, GEN_NOME})\r\n        });\r\n        const json = await req.json();\r\n        return json;\r\n    },\r\n    getUserId: async () => {\r\n        const user = await AsyncStorage.getItem('user');\r\n        const token = await AsyncStorage.getItem('token');\r\n        const req = await fetch(`${BASE_API}/user/` + user, {\r\n            headers: {\r\n                \"Authorization\": 'Baerer ' + token\r\n            }\r\n        });\r\n        const json = await req.json();\r\n        return json;\r\n    },\r\n    locateBook: async (BOOK_ID, LOC_DATE_RETIRADA) => {\r\n        const token = await AsyncStorage.getItem('token');\r\n        const user = await AsyncStorage.getItem('user');\r\n        const req = await fetch(`${BASE_API}/user`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": 'Baerer ' + token\r\n            },\r\n            body: JSON.stringify({user, BOOK_ID, LOC_DATE_RETIRADA})\r\n        });\r\n        const json = await req.json();\r\n        return json;\r\n    },\r\n    getLocates: async () => {\r\n        const token = await AsyncStorage.getItem('token');\r\n        const user = await AsyncStorage.getItem('user');\r\n        const req = await fetch(`${BASE_API}/user/getLocates/` + user, {\r\n            headers: {\r\n                \"Authorization\": 'Baerer ' + token\r\n            }\r\n        });\r\n        const json = await req.json();\r\n        return json;\r\n    },\r\n    giveBackBook: async (BOOK_ID) => {\r\n        const token = await AsyncStorage.getItem('token');\r\n        const user = await AsyncStorage.getItem('user');\r\n        const req = await fetch(`${BASE_API}/user/giveBack`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": 'Baerer ' + token\r\n            },\r\n            body: JSON.stringify({user, BOOK_ID})\r\n        });\r\n        const json = await req.json();\r\n        return json;\r\n    },\r\n    verifyFavorite: async (BOOK_ID) => {\r\n        const token = await AsyncStorage.getItem('token');\r\n        const user = await AsyncStorage.getItem('user');\r\n        const req = await fetch(`${BASE_API}/user/verifyFavorite`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": 'Baerer ' + token\r\n            },\r\n            body: JSON.stringify({user, BOOK_ID})\r\n        });\r\n        const json = await req.json();\r\n        return json;\r\n    },\r\n    addFavorite: async (BOOK_ID) => {\r\n        const token = await AsyncStorage.getItem('token');\r\n        const user = await AsyncStorage.getItem('user');\r\n        const req = await fetch(`${BASE_API}/user/addFavorite`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": 'Baerer ' + token\r\n            },\r\n            body: JSON.stringify({user, BOOK_ID})\r\n        });\r\n        const json = await req.json();\r\n        return json;\r\n    },\r\n    removeFavorite: async (BOOK_ID) => {\r\n        const token = await AsyncStorage.getItem('token');\r\n        const user = await AsyncStorage.getItem('user');\r\n        const req = await fetch(`${BASE_API}/user/removeFavorites`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": 'Baerer ' + token\r\n            },\r\n            body: JSON.stringify({user, BOOK_ID})\r\n        });\r\n        const json = await req.json();\r\n        return json;\r\n    },\r\n    getFavorites: async () => {\r\n        const token = await AsyncStorage.getItem('token');\r\n        const user = await AsyncStorage.getItem('user');\r\n        const req = await fetch(`${BASE_API}/user/getFavorites/` + user, {\r\n            headers: {\r\n                \"Authorization\": 'Baerer ' + token\r\n            }\r\n        });\r\n        const json = await req.json();\r\n        return json;\r\n    },\r\n    alterPassword: async (USR_ID, USR_PASSWORD) => {\r\n        const token = await AsyncStorage.getItem('token');\r\n        const req = await fetch(`${BASE_API}/auth/update/`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": 'Baerer ' + token\r\n            },\r\n            body: JSON.stringify({USR_ID, USR_PASSWORD})\r\n        });\r\n        const json = await req.json();\r\n        return json;\r\n    },\r\n    alterData: async (USR_ID, USR_NAME, USR_LOGINNAME, USR_PHONENUMBER, USR_DATEBIRTHDAY, USRDOC_CPFNUMBER) => {\r\n        if(USR_NAME == '')\r\n            USR_NAME = null;\r\n        if(USR_LOGINNAME == '')\r\n            USR_LOGINNAME = null;\r\n        if(USR_PHONENUMBER == '')\r\n            USR_PHONENUMBER = null;\r\n        if(USR_DATEBIRTHDAY == '')\r\n            USR_DATEBIRTHDAY = null;\r\n        if(USRDOC_CPFNUMBER == '')\r\n            USRDOC_CPFNUMBER = null;\r\n\r\n        const token = await AsyncStorage.getItem('token');\r\n        const req = await fetch(`${BASE_API}/auth/updateData/`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": 'Baerer ' + token\r\n            },\r\n            body: JSON.stringify({USR_ID, USR_NAME, USR_LOGINNAME, USR_PHONENUMBER, USR_DATEBIRTHDAY, USRDOC_CPFNUMBER})\r\n        });\r\n        const json = await req.json();\r\n        return json;\r\n    },\r\n    addBook: async (BOOK_NAME, BOOK_DESC, BOOK_GEN, BOOK_AUTHOR, BOOK_PATH) => {\r\n        const token = await AsyncStorage.getItem('token');\r\n        const req = await fetch(`${BASE_API}/book/`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": 'Baerer ' + token\r\n            },\r\n            body: JSON.stringify({BOOK_NAME, BOOK_DESC, BOOK_GEN, BOOK_AUTHOR, BOOK_PATH})\r\n        });\r\n        const json = await req.json();\r\n        return json;\r\n    },\r\n    getBookLocates: async () => {\r\n        const token = await AsyncStorage.getItem('token');\r\n        const req = await fetch(`${BASE_API}/book/locates/`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": 'Baerer ' + token\r\n            }\r\n        });\r\n        const json = await req.json();\r\n        return json;\r\n    },\r\n    getBookLocatesByUserName: async (USR_NAME) => {\r\n        const token = await AsyncStorage.getItem('token');\r\n        const req = await fetch(`${BASE_API}/book/locatesByUserName/`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": 'Baerer ' + token\r\n            },\r\n            body: JSON.stringify({USR_NAME})\r\n        });\r\n        const json = await req.json();\r\n        return json;\r\n    },\r\n    getBookLocatesByBookName: async (BOOK_NAME) => {\r\n        const token = await AsyncStorage.getItem('token');\r\n        const req = await fetch(`${BASE_API}/book/locatesByBookName/`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": 'Baerer ' + token\r\n            },\r\n            body: JSON.stringify({BOOK_NAME})\r\n        });\r\n        const json = await req.json();\r\n        return json;\r\n    },\r\n    getGenres: async () => {\r\n        const token = await AsyncStorage.getItem('token');\r\n        const req = await fetch(`${BASE_API}/book/getGenre/`, {\r\n            headers: {\r\n                \"Authorization\": 'Baerer ' + token\r\n            }\r\n        });\r\n        const json = await req.json();\r\n        return json;\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}