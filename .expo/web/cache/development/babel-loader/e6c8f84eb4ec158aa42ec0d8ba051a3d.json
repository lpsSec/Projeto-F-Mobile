{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\lucas\\\\Documents\\\\Programacao\\\\React-Native\\\\Project-E-MyBook\\\\src\\\\pages\\\\Preload.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useContext } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useNavigation } from '@react-navigation/native';\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Api from \"../Api\";\nimport { UserContext } from \"../contexts/UserContext\";\nexport default (function () {\n  var _useContext = useContext(UserContext),\n      userDispatch = _useContext.dispatch;\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    var checkToken = function checkToken() {\n      var token, user, json;\n      return _regeneratorRuntime.async(function checkToken$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n            case 2:\n              token = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n            case 5:\n              user = _context.sent;\n\n              if (!token) {\n                _context.next = 20;\n                break;\n              }\n\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(Api.checkToken(token, user));\n\n            case 9:\n              json = _context.sent;\n\n              if (!json.token) {\n                _context.next = 17;\n                break;\n              }\n\n              _context.next = 13;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('token', json.token));\n\n            case 13:\n              userDispatch({\n                type: 'setAvatar',\n                payload: {\n                  avatar: json.data.AVATAR_PATH\n                }\n              });\n              navigation.reset({\n                routes: [{\n                  name: 'Home'\n                }]\n              });\n              _context.next = 18;\n              break;\n\n            case 17:\n              navigation.reset({\n                routes: [{\n                  name: 'SignIn'\n                }]\n              });\n\n            case 18:\n              _context.next = 21;\n              break;\n\n            case 20:\n              navigation.reset({\n                routes: [{\n                  name: 'SignIn'\n                }]\n              });\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    checkToken();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: styles.icon,\n    source: require(\"../assets/logo.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"#000000\",\n    style: styles.loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }));\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#FFFFFF'\n  },\n  loading: {\n    marginTop: 10\n  },\n  icon: {\n    width: '35%',\n    height: 140\n  }\n});","map":{"version":3,"sources":["C:/Users/lucas/Documents/Programacao/React-Native/Project-E-MyBook/src/pages/Preload.js"],"names":["React","useEffect","useContext","AsyncStorage","useNavigation","Api","UserContext","userDispatch","dispatch","navigation","checkToken","getItem","token","user","json","setItem","type","payload","avatar","data","AVATAR_PATH","reset","routes","name","styles","container","icon","require","loading","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","marginTop","width","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { View, ActivityIndicator, Image, StyleSheet } from 'react-native';\r\nimport Api from '../Api'; \r\nimport { UserContext } from '../contexts/UserContext';\r\n\r\nexport default () => {\r\n    const { dispatch: userDispatch } = useContext(UserContext);\r\n    const navigation = useNavigation();\r\n\r\n    useEffect(()=>{\r\n        const checkToken = async () => {\r\n            const token = await AsyncStorage.getItem('token');\r\n            const user = await AsyncStorage.getItem('user');\r\n            if(token) {\r\n                let json = await Api.checkToken(token, user);\r\n                if(json.token) {\r\n                    await AsyncStorage.setItem('token', json.token);\r\n                    userDispatch({\r\n                        type: 'setAvatar',\r\n                        payload: {\r\n                            avatar: json.data.AVATAR_PATH\r\n                        }\r\n                    });\r\n                                    \r\n                    navigation.reset({\r\n                        routes: [{name: 'Home'}]\r\n                    });\r\n                } else {\r\n                    navigation.reset({\r\n                        routes: [{name: 'SignIn'}]\r\n                    });\r\n                }\r\n            } else {\r\n                navigation.reset({\r\n                    routes: [{name: 'SignIn'}]\r\n                });\r\n            }\r\n        }\r\n        checkToken();\r\n    }, []);\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Image style={styles.icon} source={require('../assets/logo.png')}/>\r\n            <ActivityIndicator size=\"large\" color=\"#000000\" style={styles.loading}/>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: '#FFFFFF'\r\n    },\r\n    loading: {\r\n        marginTop: 10\r\n    },\r\n    icon: {\r\n        width: '35%',\r\n        height: 140\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}